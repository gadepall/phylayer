#Code by GVV Sharma
#July  13, 2020
#released under GNU GPL
#Accompanying file for plotting data generated by lms_test.m

import numpy as np
import matplotlib.pyplot as plt
#from coeffs import *

#if using termux
import subprocess
import shlex
#end if


#save ("-ascii", "./LMS_equalizer_octave/codes/lms.txt","r_y_MSE","i_y_MSE","r_y_LMS","i_y_LMS","r_a","i_a","r_Rk","i_Rk");
x = np.loadtxt('./LMS_equalizer_octave/codes/lms.txt',dtype='double')
r_y_MSE = x[0,:]
i_y_MSE = x[1,:]
r_y_LMS = x[2,:]
i_y_LMS = x[3,:]
#r_a = x[4,:]
#i_a = x[5,:]
#r_Rk = x[6,:]
#i_Rk = x[7,:]
###Generating all lines
#
##figure(1); 
#plt.plot(r_a,i_a,'*'); 
#plt.title('8PSK constellation'); 
#plt.grid();
##figure(2);  
##plt.plot(r_Rk,i_Rk,'*');
###plt.legend('Received constellation')
##
##figure(3);
##plt.subplot(121);
plt.plot(r_y_LMS,i_y_LMS,'rx'); 
##title('LMS Equalized Constellation');
plt.grid()
##plt.subplot(122);
##plt.plot(y_MSE((hTap+1)/2:end),'rx');
##plt.title('MSE Equalized Constellation');
##plt.grid()
#
##plt.xlabel('$x$')
##plt.ylabel('$y$')
##plt.legend(loc='best')
##plt.grid() # minor
##plt.axis('equal')
#
##if using termux
plt.savefig('./figs/lms_test.pdf')
plt.savefig('./figs/lms_test.eps')
subprocess.run(shlex.split("termux-open ./figs/lms_test.pdf"))
##else
##plt.show()
#
#
#
#
#
#
#
