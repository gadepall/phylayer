#Code by GVV Sharma
#July  29, 2020
#released under GNU GPL
#Accompanying file for plotting data generated by MMSE_Zero_insertion.m

import numpy as np
import matplotlib.pyplot as plt
#from coeffs import *

#if using termux
import subprocess
import shlex
#end if


#Extracting Data
x = np.loadtxt('mmse_ser.dat',dtype='double')
EbN0dB = x[0,:]
SER_MMSE = x[1,:]
theory_bpsk= x[2,:]
theoreticalSER = x[3,:]
#x = np.loadtxt('triangle.dat',dtype='double')

## Plots
plt.semilogy(EbN0dB,SER_MMSE,'m-*');
#plt.semilogy(EbN0dB,SER_MMSE,'m-*');
#hold on;

# semilogy(EbN0dB,theoreticalSER,'r-*');
# hold on;
# 
# semilogy(EbN0dB,theory_bpsk,'b-*');
# hold on;

#legend('MMSE','TheoryBER','TheoryBPSK','location','best');
#xlabel('$\frac{E_s}{N_0}$(dB)','Interpreter','latex');
#ylabel('$P_e$','Interpreter','latex');
#saveas(gcf,'Equalizers','eps');
plt.grid()


#Plotting all lines
#plt.plot(x_AB[0,:],x_AB[1,:],label='$AB$')
#plt.plot(x_BC[0,:],x_BC[1,:],label='$BC$')
#plt.plot(x_CA[0,:],x_CA[1,:],label='$CA$')
#plt.plot(x_CM[0,:],x_CM[1,:],label='$CM$')
#plt.plot(x_MD[0,:],x_MD[1,:],label='$MD$' )
#plt.plot(x_DB[0,:],x_DB[1,:],label='$DB$' )
#
#
#plt.xlabel('$x$')
#plt.ylabel('$y$')
#plt.legend(loc='best')
#plt.grid() # minor
#plt.axis('equal')

#if using termux
plt.savefig('./figs/mmse_ser.pdf')
plt.savefig('./figs/mmse_ser.eps')
subprocess.run(shlex.split("termux-open ./figs/mmse_ser.pdf"))
#else
#plt.show()







